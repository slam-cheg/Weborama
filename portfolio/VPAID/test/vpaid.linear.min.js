!(function (t, e, i) {
    var a, o, r, s, n, d, l, u, c, m, h, p, f;
    function v() {
        (this.audibilityFired = !1), (this.secondsAudible = 0), (this.started = !1);
    }
    function g(e) {
        (this.rootElement = e), (this.started = !1), (this.intersectionSupport = !!t.IntersectionObserver), (this.intersectionRatio = -1);
    }
    function A(t) {
        switch (t.type) {
            case h.AdVideoStart:
                d.hide(!1),
                    r.customParams.ts > 0 &&
                        setTimeout(function () {
                            void 0 !== r.playerSizeDesktop
                                ? (l.customEvent(r.playerSizeDesktop), d.update({ type: r.playerSizeDesktop, data: r.adSize }))
                                : l.customEvent("playersize_undefined");
                        }, 500),
                    r.customParams.imu > 0 &&
                        setTimeout(function () {
                            l.customEvent(r.mute ? "initially_muted" : "initially_unmuted");
                        }, 500),
                    (r.state = h.AdImpression),
                    r.customParams.imho > 0 && l.customEvent("Impression_site_" + r.customParams.imho),
                    (r.state = h.AdVideoStart),
                    u.start(),
                    c.start();
                break;
            case h.AdRemainingTimeChange:
                r.metaData = t.data;
                break;
            case h.AdError:
                l.customEvent("error_videoplayer"),
                    (r.state = h.AdError),
                    l.customEvent(h.AdError + "_" + o.MEDIA_FILES_ERROR.code),
                    u.stop(!0),
                    c.stop(!0),
                    setTimeout(function () {
                        m.stopAd();
                    }, 250);
                break;
            case h.AdVideoComplete:
                r.customParams.fdc
                    ? (a.d(h.create(h.AdVideoComplete, r.metaData)),
                      d.hide(!0),
                      setTimeout(function () {
                          m.stopAd();
                      }, r.customParams.daf))
                    : (u.stop(),
                      (r.state = h.AdVideoComplete),
                      r.customParams.nr ||
                          (c.stop(),
                          d.hide(!0),
                          setTimeout(function () {
                              m.stopAd();
                          }, r.customParams.daf)));
                break;
            case h.AdPaused:
                r.state = h.AdPaused;
                break;
            case h.AdPlaying:
                r.state = h.AdPlaying;
                break;
            default:
                f.error("======================== UNTREATED MEDIA EVENT ========================>", t);
        }
    }
    (a = {
        subscribers: {},
        subscribe: function (t, e, i) {
            "string" == typeof e && (e = [e]);
            for (var a = 0, o = e.length; a < o; a++) {
                var r = e[a];
                this.subscribers[r] || (this.subscribers[r] = []), this.subscribers[r].push({ fn: t, ctx: i || null });
            }
        },
        unsubscribe: function (t, e) {
            "string" == typeof e && (e = [e]);
            for (var i = e.length; i >= 0; i--) {
                var a = this.subscribers[e[i]];
                if (a && Array.isArray(a) && a.length) for (var o = a.length - 1; o >= 0; o--) void 0 !== a[o] && a[o].fn === t && a.splice(o, 1);
            }
        },
        d: function (t) {
            t.type != h.AdRemainingTimeChange &&
                f.log(
                    "DispatchEvent =>",
                    t.type,
                    c ? c.getViewAbility(r.viewAbilityPercent, r.viewAbilityHasFocus).state : "",
                    (this.subscribers[t.type] || []).length
                ),
                (this.subscribers[t.type] || []).forEach(function (e) {
                    e.fn &&
                        (t.type == h.AdClickThru && r.customParams.plc
                            ? e.fn.call(e.ctx, t.data.url, t.data.id, t.data.playerHandles)
                            : e.fn.call(e.ctx, t));
                });
        },
    }),
        (o = {
            WRONG_INIT_PARAMS: { code: 900, message: "Initialization parameters are wrong" },
            WRONG_AD_PARAMETERS: { code: 900, message: "Can't parse AdParameters" },
            NOT_ALLOWED_METHOD: { code: 0, message: "This method is not supported" },
            MEDIA_FILES_ERROR: { code: 405, message: "Could not display mediaFile" },
            MEDIA_FILES_NOT_FOUND: { code: 403, message: "Supported mediaFiles not found" },
        }),
        (r = Object.create(Object.prototype, {
            linear: {
                get: function () {
                    return this._linear || !0;
                },
                set: function (t) {
                    this._linear !== t && (this._linear = t);
                },
            },
            isPreviewer: {
                get: function () {
                    return (
                        this._isPreviewer ||
                            ((this._isPreviewer = "none"),
                            c.getPosition() !== g.X_FRAME && (this._isPreviewer = "clients.weborama.nl" == t.top.location.host ? "preview" : "none")),
                        "preview" == this._isPreviewer
                    );
                },
            },
            remainingTime: {
                get: function () {
                    return this._remainingTime || -1;
                },
                set: function (t) {
                    this.remainingTime !== t &&
                        ((this._remainingTime = t),
                        d.update({ type: h.AdRemainingTimeChange, data: this.metaData }),
                        a.d(h.create(h.AdRemainingTimeChange, { value: this.remainingTime })));
                },
            },
            canSkip: {
                get: function () {
                    return this._canSkip || !!this.customParams.sk;
                },
                set: function (t) {
                    this._canSkip !== t &&
                        ((this._canSkip = t),
                        d.update({ type: h.AdSkippableStateChange, data: { value: t } }),
                        a.d(h.create(h.AdSkippableStateChange, { value: t })));
                },
            },
            adSize: {
                get: function () {
                    return this._adSize || {};
                },
                set: function (t) {
                    if (
                        (this._adSize
                            ? (this._adSize.width === t.width && this._adSize.height === t.height) ||
                              ((this._adSize = t),
                              d.update({ type: h.AdSizeChange, data: this.adSize }),
                              a.d(h.create(h.AdSizeChange, { width: t.width, height: t.height })))
                            : (this._adSize = t),
                        this.adSize.width && "object" == typeof this.playerSizeParams)
                    )
                        if (this.fullscreen) this.playerSize = "PlayerFullscreen";
                        else {
                            var e = this.playerSizeParams,
                                i = this.adSize.width;
                            for (var o in e)
                                if (e.hasOwnProperty(o)) {
                                    var r = e[o];
                                    (!r[0] || i >= r[0]) && (!r[1] || i < r[1]) && (this.playerSizeDesktop = o);
                                }
                        }
                },
            },
            playerSize: {
                get: function () {
                    return this._playerSize;
                },
                set: function (t) {
                    this._playerSize = t;
                },
            },
            fullscreen: {
                get: function () {
                    return this.adSize.viewMode === r.FULLSCREEN;
                },
            },
            FULLSCREEN: { value: "fullscreen" },
            NORMAL: { value: "normal" },
            duration: {
                get: function () {
                    return this._duration || -2;
                },
                set: function (t) {
                    this._duration !== t && ((this._duration = t), a.d(h.create(h.AdDurationChange, { duration: t })));
                },
            },
            defaultVolume: {
                get: function () {
                    return this._defaultVolume;
                },
                set: function (t) {
                    t && (this._defaultVolume = t);
                },
            },
            volume: {
                get: function () {
                    return this._volume || this.defaultVolume;
                },
                set: function (t) {
                    if (this._volume !== t) {
                        (this._volume = t), (this.defaultVolume = t), d.update({ type: h.AdVolumeChange, data: { volume: t }, mute: !!t });
                        try {
                            void 0 !== n.video && (n.video.volume = t);
                        } catch (e) {
                            f.error("set volume", t, e);
                        }
                        l.trackEvent(h.AdVolumeChange), a.d(h.create(h.AdVolumeChange, { volume: t }));
                    }
                },
            },
            mute: {
                get: function () {
                    return "undefined" == this._mute ? !this.volume : this._mute;
                },
                set: function (t) {
                    if ((this._mute !== !!t && l.customEvent(t ? "mute" : "unmute"), void 0 !== n.video)) {
                        try {
                            n.video.muted = !!t;
                        } catch (e) {
                            f.error("set muted", t, e);
                        }
                        r.flags.isGoog || (t ? n.video.setAttribute("muted", "muted") : n.video.removeAttribute("muted"));
                    }
                    this._mute = !!t;
                },
            },
            state: {
                set: function (t) {
                    if (this.state !== t && this.state !== h.AdStopped) {
                        if (
                            ((this._state = t),
                            d.update({ type: t, data: this.metaData }),
                            a.d(h.create(t, this.metaData)),
                            r.customParams.nr && this.state === h.AdVideoComplete)
                        ) {
                            if (this.flags.complete) return;
                            this.flags.complete = !0;
                        }
                        l.trackEvent(t);
                    }
                },
                get: function () {
                    return this._state;
                },
            },
            metaData: {
                get: function () {
                    return this._metaData || { totalTime: 30, currentTime: 0 };
                },
                set: function (t) {
                    if (this._metaData) {
                        (this._metaData = t),
                            t.currentTime >= this.customParams.co && (r.canSkip = !0),
                            r.customParams.tsec && t.currentTime >= 10 && ((r.customParams.tsec = 0), l.customEvent("AdVideoSecond10"));
                        var e = t.currentTime / t.totalTime;
                        e >= 0.25 &&
                            !1 === r.middleEvents[0] &&
                            ((r.middleEvents[0] = !0),
                            l.trackEvent(h.AdVideoFirstQuartile),
                            d.update({ type: h.AdVideoFirstQuartile, data: this.metaData }),
                            a.d(h.create(h.AdVideoFirstQuartile, t))),
                            e >= 0.5 &&
                                !1 === r.middleEvents[1] &&
                                ((r.middleEvents[1] = !0),
                                l.trackEvent(h.AdVideoMidpoint),
                                d.update({ type: h.AdVideoMidpoint, data: this.metaData }),
                                a.d(h.create(h.AdVideoMidpoint, t))),
                            e >= 0.75 &&
                                !1 === r.middleEvents[2] &&
                                ((r.middleEvents[2] = !0),
                                l.trackEvent(h.AdVideoThirdQuartile),
                                d.update({ type: h.AdVideoThirdQuartile, data: this.metaData }),
                                a.d(h.create(h.AdVideoThirdQuartile, t))),
                            r.customParams.fdc &&
                                t.totalTime - t.currentTime < r.customParams.fdc &&
                                !1 === r.middleEvents[3] &&
                                ((r.middleEvents[3] = !0),
                                l.trackEvent(h.AdVideoComplete),
                                d.update({ type: h.AdVideoComplete, data: this.metaData }),
                                u.stop(),
                                c.stop());
                    } else (this._metaData = t), a.d(h.create(h.AdDurationChange, this.metaData));
                    r.remainingTime = this.metaData.totalTime - this.metaData.currentTime;
                },
            },
            middleEvents: { value: [!1, !1, !1, !1] },
            savedSource: {
                get: function () {
                    return this._savedSource || "";
                },
                set: function (t) {
                    this._savedSource = t;
                },
            },
            savedAttributes: { value: {} },
            origin: {
                get: function () {
                    if (!this._origin) {
                        var t = (r.adParameters.customView || r.adParameters.mediapath).split("/");
                        (t.length = 3), (this._origin = t.join("/"));
                    }
                    return this._origin;
                },
            },
            location: {
                get: function () {
                    if (!this._location)
                        if (((this._location = encodeURIComponent(r.realWindow.location.href)), c.getPosition() !== g.X_FRAME))
                            this._location = encodeURIComponent(t.top.location.href);
                        else
                            try {
                                var e = r.realWindow.location.ancestorOrigins;
                                if (e && e.length > 0) {
                                    var i = e[e.length - 1];
                                    i.indexOf("chrome-extension") >= 0
                                        ? (this._location = encodeURIComponent("fraudulent-chromium-extension"))
                                        : (this._location = "http://a" == i || "https://a" == i ? encodeURIComponent(e[0]) : encodeURIComponent(i));
                                }
                            } catch (t) {}
                    return this._location;
                },
            },
            hostname: {
                get: function () {
                    return (
                        this._hostname ||
                            (this._location.indexOf("://") > -1
                                ? (this._hostname = this._location.split("/")[2])
                                : (this._hostname = this._location.split("/")[0]),
                            (this._hostname = this._hostname.split(":")[0]),
                            (this._hostname = this._hostname.split("?")[0])),
                        this._hostname
                    );
                },
            },
            realWindow: {
                get: function () {
                    var t = d.root.ownerDocument;
                    return t.defaultView || t.parentWindow;
                },
            },
            viewAbilityPercent: {
                get: function () {
                    return 50;
                },
            },
            viewAbilityHasFocus: {
                get: function () {
                    return !r.customParams.nr;
                },
            },
            customParams: {
                get: function () {
                    return this._customParams;
                },
                set: function (t) {
                    this._customParams || (this._customParams = t);
                },
            },
            flags: { value: {} },
            mobileOS: {
                get: function () {
                    if (!this._operatingSystem) {
                        var e = navigator.userAgent || navigator.vendor || t.opera;
                        /windows phone/i.test(e)
                            ? (this._operatingSystem = "Windows Phone")
                            : /android/i.test(e)
                            ? (this._operatingSystem = "Android")
                            : /iPad|iPhone|iPod/.test(e) && !t.MSStream
                            ? (this._operatingSystem = "iOS")
                            : (this._operatingSystem = "unknown");
                    }
                    return this._operatingSystem;
                },
            },
            isMobile: {
                get: function () {
                    if (!this._isMobile)
                        if (((this._isMobile = !1), "maxTouchPoints" in navigator)) this._isMobile = navigator.maxTouchPoints > 0;
                        else if ("msMaxTouchPoints" in navigator) this._isMobile = navigator.msMaxTouchPoints > 0;
                        else {
                            var e = t.matchMedia && matchMedia("(pointer:coarse)");
                            e && "(pointer:coarse)" === e.media
                                ? (this._isMobile = !!e.matches)
                                : (this._isMobile =
                                      "orientation" in t ||
                                      navigator.userAgent.match(/(iPhone|iPod|iPad|Android|webOS|BlackBerry|Windows Phone|IEMobile|Opera Mini)/i));
                        }
                    return this._isMobile;
                },
            },
        })),
        (n = {
            flags: {},
            init: function (t) {
                if (!this.flags.inited && !this.flags.started) {
                    (this.flags.inited = !0), this.interval, (this.intervalTime = 0), (this.video = t);
                    var i,
                        a,
                        o = r.adParameters.mediafiles,
                        s = r.adParameters.submediapath ? r.adParameters.submediapath : r.adParameters.mediapath;
                    for (i = 0; i < this.events.length; i++)
                        this.video.addEventListener(
                            this.events[i],
                            function (t) {
                                if (!this.flags.stopped) {
                                    var e = { totalTime: t.target.duration, currentTime: t.target.currentTime };
                                    switch (t.type) {
                                        case "play":
                                            this.flags.videoStart && A.call(this, h.create(h.AdPlaying, e));
                                            break;
                                        case "pause":
                                            if (e.currentTime / e.totalTime >= 0.98) return;
                                            r.flags.userEngaged || A.call(this, h.create(h.AdPaused, e));
                                            break;
                                        case "ended":
                                            r.customParams.dmmt &&
                                                n.interval &&
                                                (clearInterval(n.interval), (n.interval = null), l.customEvent("video_timer_clr_byend")),
                                                A.call(this, h.create(h.AdVideoComplete, e));
                                            break;
                                        case "error":
                                            f.error("JS-VPAID-WCM::ERROR => mediaElement", t), A.call(this, h.create(h.AdError, e));
                                            break;
                                        case "timeupdate":
                                            if (!this.flags.videoStart && e.currentTime) {
                                                r.customParams.dmmt &&
                                                    n.interval &&
                                                    (clearInterval(n.interval),
                                                    (n.interval = null),
                                                    setTimeout(function () {
                                                        l.customEvent("video_timer_clr_" + n.intervalTime);
                                                    }, 250)),
                                                    (this.flags.videoStart = !0),
                                                    A.call(this, h.create(h.AdVideoStart, e));
                                                var i = t.target.currentSrc;
                                                i && i.match(/[a-z0-9]+$/) && setTimeout(function () {}, 250);
                                            }
                                            r.flags.userEngaged || A.call(this, h.create(h.AdRemainingTimeChange, e));
                                    }
                                }
                            }.bind(this),
                            !0
                        );
                    for (
                        1 === this.video.nodeType &&
                            "function" == typeof this.video.hasAttribute &&
                            this.video.hasAttribute("src") &&
                            "function" == typeof this.video.getAttribute &&
                            "" != this.video.getAttribute("src") &&
                            ((r.savedSource = this.video.getAttribute("src")), this.video.removeAttribute("src")),
                            i = 0;
                        i < o.length;
                        i++
                    )
                        if (this.video.canPlayType(o[i].type)) {
                            var d = e.createElement("source");
                            if (
                                ((d.type = o[i].type),
                                (d.src = s + o[i].src),
                                (d.id = "wb-src-" + Math.round(1e12 * Math.random()).toString(36)),
                                "function" == typeof this.video.appendChild && this.video.appendChild(d),
                                r.flags.isGoog ||
                                    ("function" == typeof this.video.hasAttribute && !this.video.hasAttribute("src")) ||
                                    ("function" == typeof this.video.getAttribute && "" == this.video.getAttribute("src")))
                            ) {
                                var u = s + o[i].src;
                                this.video.setAttribute("src", u);
                            }
                            if (("function" == typeof this.video.load && this.video.load(), (a = !0), "video/mp4" == o[i].type)) break;
                        }
                    return (
                        r.customParams.sd > 0 && ((r.volume = 0), (r.mute = !0)), r.customParams.dmmt && l.customEvent("videoplayer_inited_" + a), a
                    );
                }
            },
            play: function () {
                return (
                    !!(r.customParams.nr || (this.flags.inited && !this.flags.started)) &&
                    ((this.flags.started = !0),
                    r.customParams.dmmt &&
                        0 == this.intervalTime &&
                        (this.interval = setInterval(function () {
                            (n.intervalTime += 1e3), l.customEvent("video_timer_" + n.intervalTime);
                        }, 1e3)),
                    r.customParams.dmmt && l.customEvent("videoplayer_playcommand_received"),
                    this.video.play(),
                    !0)
                );
            },
            pause: function () {
                !this.flags.paused && this.flags.started && ((this.flags.paused = !0), this.video.pause());
            },
            resume: function () {
                this.flags.paused && ((this.flags.paused = !1), this.video.play());
            },
            stop: function () {
                if (!this.flags.started || this.flags.stopped) return !1;
                r.customParams.dmmt && n.interval && (clearInterval(n.interval), (n.interval = null), l.customEvent("video_timer_clr_stop")),
                    (this.flags.stopped = !0),
                    this.pause();
            },
            events: ["play", "pause", "ended", "timeupdate", "error"],
        }),
        (d = {
            flags: {},
            init: function (t, i) {
                (this.root = t.appendChild(e.createElement("div"))), (this.root.id = "wb-" + Math.round(1e12 * Math.random()).toString(36));
                var s = e.createElement("link");
                (s.rel = "stylesheet"),
                    (s.href = r.adParameters.mediapath + "style.min.css?v=~RANDOM~"),
                    this.root.appendChild(s),
                    (this.videoElement = i || this.root.appendChild(e.createElement("video"))),
                    this.videoElement.setAttribute("webkit-playsinline", "playsinline"),
                    this.videoElement.setAttribute("playsinline", "playsinline"),
                    r.customParams.nr && this.videoElement.setAttribute("preload", "auto");
                var p = r.adParameters.submediapath ? r.adParameters.submediapath : r.adParameters.mediapath;
                r.customParams.up && (this.videoElement.poster = p + "poster.png"),
                    this.updateSize(),
                    r.realWindow.addEventListener(
                        "message",
                        function (t) {
                            if (t.origin === r.origin) {
                                var e = {};
                                try {
                                    e = JSON.parse(t.data);
                                } catch (t) {}
                                e.id === this.root.id &&
                                    function (t) {
                                        if ("event" === t.type) return l.customEvent(t.data.type);
                                        if ("apply" === t.type)
                                            return (
                                                "resumeAd" === t.data.method && r.flags.userEngaged && (r.flags.userEngaged = !1),
                                                "function" == typeof m[t.data.method]
                                                    ? m[t.data.method].apply(m, t.data.args)
                                                    : "function" == typeof d[t.data.method]
                                                    ? d[t.data.method].apply(d, t.data.args)
                                                    : f.error('CAN\'T "apply" METHOD =>', t.data.method)
                                            );
                                        if ("action" === t.type)
                                            switch (t.data.type) {
                                                case h.AdLoaded:
                                                    var e = r.adParameters.settingspath
                                                            ? r.adParameters.settingspath
                                                            : r.adParameters.submediapath
                                                            ? r.adParameters.submediapath
                                                            : r.adParameters.mediapath,
                                                        i = r.customParams.ex > 0 ? "extra" + r.customParams.ex : "default";
                                                    r.isMobile && console.log("isMobile enabled"),
                                                        d.update({
                                                            type: "SetConfig",
                                                            data: {
                                                                clickUrl: l.getClickURL(i),
                                                                customParams: r.customParams,
                                                                defaultVolume: r.defaultVolume,
                                                                location: r.location,
                                                                domain: r.hostname,
                                                                mediapath: e,
                                                            },
                                                        }),
                                                        d.hide(!0),
                                                        n.init(d.videoElement)
                                                            ? ((r.state = h.AdLoaded), (r.linear = !0))
                                                            : (l.customEvent("error_mediafiles"),
                                                              (r.metaData = o.MEDIA_FILES_NOT_FOUND),
                                                              (r.state = h.AdError),
                                                              l.customEvent(h.AdError + "_" + o.MEDIA_FILES_NOT_FOUND.code));
                                                    break;
                                                case h.AdClickThru:
                                                    t.data.url
                                                        ? a.d(h.create(h.AdClickThru, { playerHandles: !0, id: t.data.id, url: t.data.url }))
                                                        : a.d(h.create(h.AdClickThru, { playerHandles: !1, id: t.data.id })),
                                                        l.trackEvent(h.AdClickThru);
                                                    break;
                                                case h.AdUserClose:
                                                    (r.state = h.AdUserClose),
                                                        n.stop(),
                                                        u.stop(),
                                                        c.stop(),
                                                        d.hide(!0),
                                                        setTimeout(function () {
                                                            m.stopAd();
                                                        }, r.customParams.daf);
                                                    break;
                                                default:
                                                    f.error("======================== UNTREATED VIEW EVENT ========================>", t);
                                            }
                                        else f.error("UNKNOWN TYPE VIEW EVENT =>", t);
                                    }.call(this, e);
                            }
                        }.bind(this),
                        !1
                    ),
                    (this.frameElement = this.root.appendChild(e.createElement("iframe"))),
                    this.frameElement.setAttribute("scrolling", "no"),
                    this.frameElement.setAttribute("frameborder", "no"),
                    this.frameElement.setAttribute("allow", "autoplay"),
                    (this.frameElement.src =
                        (r.adParameters.customView ? r.adParameters.customView : r.adParameters.mediapath + "index.html") + "?id=" + this.root.id);
            },
            hide: function (t) {
                this.frameElement && (this.frameElement.style.display = t ? "none" : "inline-block");
            },
            update: function (t) {
                this.frameElement &&
                    this.frameElement.contentWindow &&
                    ("object" == typeof t && c && (t.viewState = t.viewState || c.getViewAbility(r.viewAbilityPercent, r.viewAbilityHasFocus).state),
                    this.frameElement && this.frameElement.contentWindow.postMessage(JSON.stringify({ id: this.root.id, event: t }), "*"));
            },
            destroy: function () {
                if (!this.root || !this.root.parentNode || "function" != typeof this.root.parentNode.removeChild) return !1;
                if ((this.root.parentNode.removeChild(this.root), this.videoElement && this.videoElement.attributes))
                    for (; this.videoElement.attributes.length; ) this.videoElement.removeAttribute(this.videoElement.attributes[0].nodeName);
                for (var t in r.savedAttributes) this.videoElement.setAttribute(t, r.savedAttributes[t]);
                if (
                    (r.savedSource &&
                        "" !== r.savedSource &&
                        (this.videoElement.setAttribute("src", r.savedSource), this.videoElement.load(), this.videoElement.play()),
                    "function" == typeof this.videoElement.querySelectorAll)
                )
                    for (var e = this.videoElement.querySelectorAll("source[id^='wb-src-']"), i = 0; i < e.length; i++)
                        this.videoElement.removeChild(e[i]);
                if (this.videoElement && this.videoElement.attributes) {
                    i = 0;
                    for (var a = this.videoElement.attributes, o = a.length; i < o; i++) a[i];
                }
                return !0;
            },
            cssStyle: function (t) {
                (this.root.style.cssText = t), this.updateSize();
            },
            resizeVideoElement: function (t) {
                this.videoElement &&
                    this.videoElement.style &&
                    ((this.videoElement.style.width = t.width + ("string" == typeof t.width ? "" : "px")),
                    (this.videoElement.style.height = t.height + ("string" == typeof t.height ? "" : "px")),
                    (this.videoElement.style.top = t.top + ("string" == typeof t.top ? "" : "px")),
                    (this.videoElement.style.left = t.left + ("string" == typeof t.left ? "" : "px")));
            },
            updateSize: function () {
                if (!this.root) return !1;
                (this.root.style.width = r.adSize.width + "px"),
                    (this.root.style.height = r.adSize.height + "px"),
                    this.videoElement &&
                        this.videoElement.style &&
                        ((this.videoElement.style.width = r.adSize.width + "px"), (this.videoElement.style.height = r.adSize.height + "px"));
            },
        }),
        (l = {
            init: function (e, i, a, o) {
                (this.options = {
                    protocol: t.location.protocol,
                    domain: e.domain,
                    account: e.account,
                    tte: e.tte,
                    aap: e.aap,
                    agi: Math.round(1e3 * Math.random()),
                }),
                    -1 == this.options.protocol.indexOf("http") && (this.options.protocol = "https:"),
                    (this.viewableEvents = i || []),
                    (this.audibleEvents = o || []),
                    (this.pixelTrackEvents = a);
            },
            protocol: function () {
                return this.options.protocol;
            },
            trackEvent: function (t) {
                if (h.convert(t) !== t) {
                    var e =
                        "{{protocol}}//{{domain}}/fcgi-bin/dispatch.fcgi?a.A=ev&a.si={{account}}&a.te={{tte}}&a.aap={{aap}}&a.agi={{agi}}&a.evn={{name}}&g.ra={{random}}";
                    t === h.AdImpression &&
                        (e =
                            "{{protocol}}//{{domain}}/fcgi-bin/dispatch.fcgi?a.A=im&a.si={{account}}&a.te={{tte}}&a.aap={{aap}}&a.agi={{agi}}&a.hr=XC&g.ra={{random}}&g.ism=1&g.did=[GAID/IDFA]"),
                        (this.options.name = h.convert(t)),
                        (this.options.random = Math.round(1e6 * Math.random())),
                        this.sendToURL(this.prepareURL(e, this.options));
                }
                if (
                    (this.pixelTrackEvents.hasOwnProperty(t) && "" != this.pixelTrackEvents[t] && this.sendToURL(this.pixelTrackEvents[t]),
                    -1 != this.viewableEvents.indexOf(t))
                ) {
                    var i = t + c.getViewAbility(r.viewAbilityPercent, r.viewAbilityHasFocus).state;
                    this.customEvent(i);
                }
                if (r.customParams.aev && -1 != this.audibleEvents.indexOf(t)) {
                    i = t + (r.mute ? v.OFF : v.ON);
                    this.customEvent(i);
                }
            },
            customEvent: function (t) {
                if (void 0 === t || "undefined" == t) l.customEvent("error_undefined_event");
                else {
                    -1 != t.indexOf("extended_video") &&
                        (t += "_" + c.getViewAbility(r.viewAbilityPercent, r.viewAbilityHasFocus).state.toLowerCase());
                    (this.options.name = t),
                        (this.options.random = Math.round(1e6 * Math.random())),
                        this.sendToURL(
                            this.prepareURL(
                                "{{protocol}}//{{domain}}/fcgi-bin/dispatch.fcgi?a.A=ev&a.si={{account}}&a.te={{tte}}&a.aap={{aap}}&a.agi={{agi}}&a.evn={{name}}&g.ra={{random}}",
                                this.options
                            )
                        ),
                        this.pixelTrackEvents.hasOwnProperty(t) && "" != this.pixelTrackEvents[t] && this.sendToURL(this.pixelTrackEvents[t]),
                        (t != p.MRCViewable && t != p.MRCUnviewable) || d.update({ type: t }),
                        r.adParameters.hasOwnProperty("customEvents") &&
                            r.adParameters.customEvents.hasOwnProperty(t) &&
                            this.sendToURL(this.prepareURL(r.adParameters.customEvents[t], this.options));
                }
            },
            getClickURL: function (t) {
                var e =
                    "{{protocol}}//{{domain}}/fcgi-bin/dispatch.fcgi?a.A=cl&a.si={{account}}&a.te={{tte}}&a.aap={{aap}}&a.agi={{agi}}&g.ism=1&g.did=[GAID/IDFA]&g.lu=";
                if (t && "default" !== t) {
                    var i = t.match(/\d+/g);
                    i && 1 == i.length && (e += "&a.urlid=" + (parseInt(i[0], 10) + 0));
                }
                return (
                    r.customParams.utm && ((this.options.aycp = encodeURIComponent(r.customParams.utm)), (e += "&a.ycp={{aycp}}")),
                    this.prepareURL(e, this.options)
                );
            },
            prepareURL: function (t, e) {
                for (var i in ((e = e || this.options),
                r.adParameters.hasOwnProperty("wcm") &&
                    r.adParameters.wcm.hasOwnProperty("siteid") &&
                    ((e.aycp = r.adParameters.wcm.siteid), (t += "&a.ycp={{aycp}}")),
                e))
                    e.hasOwnProperty(i) && (t = t.replace(new RegExp("{{" + i + "}}", "g"), e[i]));
                return t;
            },
            sendToURL: function (t, i) {
                var a = e.createElement("img");
                i && (a.onload = a.onerror = i), (a.src = t);
            },
        }),
        (v.ON = "Audible"),
        (v.OFF = "Inaudible"),
        (v.DELAY = 250),
        (v.FIRE_TIME = 2e3),
        (v.prototype.start = function () {
            this.updater || ((this.started = !0), (this.updater = setInterval(v.updateTime.bind(this), v.DELAY)));
        }),
        (v.prototype.pause = function () {
            this.updater && (clearInterval(this.updater), (this.updater = null));
        }),
        (v.prototype.resume = function () {
            this.started && this.start();
        }),
        (v.prototype.stop = function (t) {
            this.updater && clearInterval(this.updater),
                (this.started = !1),
                v.updateTime.call(this),
                this.audibilityFired || t || ((this.audibilityFired = !0), l.customEvent(v.OFF));
        }),
        (v.updateTime = function () {
            if (this.audibilityFired) return clearInterval(this.updater);
            r.mute || r.volume <= 0 ? (this.secondsAudible = 0) : (this.secondsAudible += v.DELAY),
                this.secondsAudible >= v.FIRE_TIME && ((this.audibilityFired = !0), l.customEvent(v.ON), clearInterval(this.updater));
        }),
        (g.DELAY = 250),
        (g.ON_PAGE = "OnPage"),
        (g.S_FRAME = "SameDomainFrame"),
        (g.X_FRAME = "CrossDomainFrame"),
        (g.VIEWABLE = "Viewable"),
        (g.NOT_VIEWABLE = "Unviewable"),
        (g.UNDETERMINED = "Undetermined"),
        (g.prototype.hasFocus = function () {
            return (
                ("undefined" === e.hidden || !0 !== e.hidden) &&
                (this.getPosition() === g.X_FRAME || "function" != typeof t.top.document.hasFocus || t.top.document.hasFocus())
            );
        }),
        (g.prototype.getPosition = function () {
            if (!this.position)
                if (t.top === r.realWindow) this.position = g.ON_PAGE;
                else {
                    this.position = g.S_FRAME;
                    try {
                        for (var e = r.realWindow; e.parent !== e; ) {
                            if (e.parent.document.domain !== e.document.domain) {
                                this.position = g.X_FRAME;
                                break;
                            }
                            e = e.parent;
                        }
                    } catch (t) {
                        this.position = g.X_FRAME;
                    }
                }
            return this.position;
        }),
        (g.prototype.init = function (t, e) {
            if (this.intersectionSupport) {
                var i =
                    navigator.userAgent.toLowerCase().indexOf("firefox") > -1
                        ? this.rootElement.ownerDocument.defaultView.IntersectionObserver
                        : IntersectionObserver;
                (this.intersectionObserver = new i(
                    function (t) {
                        this.intersectionRatio = Math.round(1e4 * t[0].intersectionRatio) / 100;
                    }.bind(this),
                    { threshold: [0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1] }
                )),
                    this.intersectionObserver.observe(this.rootElement);
            } else if (this.getPosition() == g.X_FRAME) {
                if (t && t.length && "function" == typeof e) for (; t.length; ) e(t.shift().name + g.UNDETERMINED);
                return !1;
            }
            2 == arguments.length && t && t.length && "function" == typeof e && ((this.observerData = t), (this.observerHandler = e));
        }),
        (g.prototype.start = function () {
            this.updater || ((this.started = !0), (this.updater = setInterval(g.updateTime.bind(this), g.DELAY)));
        }),
        (g.prototype.pause = function () {
            this.updater && (clearInterval(this.updater), (this.updater = null));
        }),
        (g.prototype.resume = function () {
            this.started && this.start();
        }),
        (g.prototype.stop = function (t) {
            if (
                (this.updater && clearInterval(this.updater),
                (this.started = !1),
                g.updateTime.call(this),
                this.observerData && this.observerData.length && !t)
            )
                for (; this.observerData.length; ) this.observerHandler(this.observerData.shift().name + g.NOT_VIEWABLE);
            this.observerData = [];
        }),
        (g.prototype.getViewAbility = function (e, i) {
            if (this.intersectionSupport) return g.match(this.hasFocus(), i, this.intersectionRatio, e);
            if (this.getPosition() == g.X_FRAME) return { state: g.UNDETERMINED, percent: 0, focus: !1 };
            if (void 0 === r.realWindow || "object" != typeof r.realWindow)
                return l.customEvent("error_slot_window"), { state: g.UNDETERMINED, percent: 0, focus: !1 };
            var a = r.realWindow,
                o = this.rootElement.getBoundingClientRect(),
                s = g.calculateArea(o, a);
            try {
                for (; a !== t.top; ) {
                    var n = a.name || (a.name = "wb-" + Math.round(1e6 * Math.random()).toString(16));
                    (o = (a = a.parent).frames[n].frameElement.getBoundingClientRect()), (s = Math.min(g.calculateArea(o, a), s));
                }
            } catch (t) {
                return { state: g.UNDETERMINED, percent: 0, focus: !1 };
            }
            return g.match(this.hasFocus(), i, s, e);
        }),
        (g.updateTime = function () {
            var t = this.getViewAbility();
            if (!this.observerData || !this.observerData.length) return clearInterval(this.updater);
            for (var e = [], i = 0; i < this.observerData.length; i++) {
                var a = this.observerData[i];
                r.customParams.nr && (a.useFocus = !1),
                    "string" != typeof a.duration ||
                        -1 == a.duration.indexOf("%") ||
                        isNaN(r.metaData.totalTime) ||
                        (a.duration = (Math.floor(2 * r.metaData.totalTime) / 2) * parseInt(a.duration, 10) * 10),
                    (!a.useFocus || t.focus) && Math.round(t.percent) >= a.percent
                        ? "true" == a.useSound
                            ? (a.timeInView = r.mute ? 0 : g.DELAY + (a.timeInView || 0))
                            : (a.timeInView = g.DELAY + (a.timeInView || 0))
                        : (a.timeInView = 0),
                    a.timeInView >= a.duration ? this.observerHandler(a.name + g.VIEWABLE) : e.push(a);
            }
            this.observerData = e;
        }),
        (g.match = function (t, e, i, a) {
            var o = g.NOT_VIEWABLE;
            return 3333333 == i
                ? { state: (o = g.UNDETERMINED), focus: t, percent: i }
                : ((t || !e) && i >= a && (o = g.VIEWABLE), { state: o, focus: t, percent: i });
        }),
        (g.calculateArea = function (t, e) {
            var i = t.width * t.height,
                a = t.width,
                o = t.height;
            return (
                t.top < 0 && (o += t.top),
                t.bottom > e.innerHeight && (o -= t.bottom - e.innerHeight),
                t.left < 0 && (a += t.left),
                t.right > e.innerWidth && (a -= t.right - e.innerWidth),
                (a * o * 100) / i
            );
        }),
        ((h = {
            create: function (t, e) {
                return { type: t, data: e };
            },
            convert: function (t) {
                return (
                    {
                        AdLoaded: "load",
                        AdStarted: "creativeView",
                        AdVideoStart: "start",
                        AdImpression: "impression",
                        AdVideoFirstQuartile: "firstQuartile",
                        AdVideoMidpoint: "midpoint",
                        AdVideoThirdQuartile: "thirdQuartile",
                        AdVideoComplete: "complete",
                        AdUserClose: "close",
                        AdSkipped: "skip",
                        AdClickThru: "click",
                        AdPaused: "pause",
                        AdPlaying: "resume",
                        AdVolumeChange: "volume",
                    }[t] || t
                );
            },
        }).AdLoaded = "AdLoaded"),
        (h.AdStarted = "AdStarted"),
        (h.AdStopped = "AdStopped"),
        (h.AdSkipped = "AdSkipped"),
        (h.AdLinearChange = "AdLinearChange"),
        (h.AdSizeChange = "AdSizeChange"),
        (h.AdExpandedChange = "AdExpandedChange"),
        (h.AdSkippableStateChange = "AdSkippableStateChange"),
        (h.AdRemainingTimeChange = "AdRemainingTimeChange"),
        (h.AdDurationChange = "AdDurationChange"),
        (h.AdVolumeChange = "AdVolumeChange"),
        (h.AdImpression = "AdImpression"),
        (h.AdVideoStart = "AdVideoStart"),
        (h.AdVideoFirstQuartile = "AdVideoFirstQuartile"),
        (h.AdVideoMidpoint = "AdVideoMidpoint"),
        (h.AdVideoThirdQuartile = "AdVideoThirdQuartile"),
        (h.AdVideoComplete = "AdVideoComplete"),
        (h.AdClickThru = "AdClickThru"),
        (h.AdInteraction = "AdInteraction"),
        (h.AdUserAcceptInvitation = "AdUserAcceptInvitation"),
        (h.AdUserMinimize = "AdUserMinimize"),
        (h.AdUserClose = "AdUserClose"),
        (h.AdPaused = "AdPaused"),
        (h.AdPlaying = "AdPlaying"),
        (h.AdLog = "AdLog"),
        (h.AdError = "AdError"),
        ((p = {}).MRCViewable = "MRCViewable"),
        (p.MRCUnviewable = "MRCUnviewable"),
        (p.MRCUndetermined = "MRCUndetermined"),
        (f = {
            injectScripts: function (t, i) {
                if (i && i.length)
                    for (var a in i)
                        if (i.hasOwnProperty(a)) {
                            var o = e.createElement("script");
                            (o.type = "text/javascript"), (o.src = i[a]), t.appendChild(o);
                        }
            },
            injectIFrames: function (t, i) {
                r.customParams.sf > 0 &&
                    (((o = e.createElement("iframe")).src = l.protocol() + "//cstatic.weborama.fr/iframe/external_all.html"),
                    (o.style.cssText = "width:1px;height:1px;visibility:hidden;position:absolute;border:0"),
                    t.appendChild(o));
                if (i && i.length)
                    for (var a in i) {
                        var o;
                        if (i.hasOwnProperty(a))
                            ((o = e.createElement("iframe")).src = i[a]),
                                (o.style.cssText = "width:1px;height:1px;visibility:hidden;position:absolute;border:0"),
                                t.appendChild(o);
                    }
            },
            log: function () {
                i && console.log.apply(console, ["JS-VPAID-WCM::INFO =>"].concat(arguments));
            },
            warn: function () {
                console.log.apply(console, ["JS-VPAID-WCM::WARN =>"].concat(arguments));
            },
            error: function () {
                console.log.apply(console, ["JS-VPAID-WCM::ERROR =>"].concat(arguments));
            },
        }),
        ((s = function () {
            console.log("JS-VPAID-WCM::INFO => ~VERSION~");
        }).prototype.handshakeVersion = function () {
            return f.log("handshakeVersion"), "2.0";
        }),
        (s.prototype.initAd = function (t, s, n, p, A, E) {
            if (
                ("string" == typeof A &&
                    ((A = { AdParameters: A }),
                    f.warn('The typeof parameter "creativeData" should be an "object" with key "AdParameters"'),
                    f.warn("Read page 44 from https://www.iab.com/wp-content/uploads/2015/06/VPAID_2_0_Final_04-10-2012.pdf")),
                "object" != typeof A || !A.AdParameters || "object" != typeof E || !E.slot)
            )
                return f.error(o.WRONG_INIT_PARAMS), f.error("initAd", arguments), a.d(h.create(h.AdError, o.WRONG_INIT_PARAMS));
            try {
                r.adParameters = JSON.parse(A.AdParameters);
            } catch (t) {
                return f.error(o.WRONG_AD_PARAMETERS), f.error("initAd", arguments), a.d(h.create(h.AdError, o.WRONG_AD_PARAMETERS));
            }
            var y = {
                aev: 1,
                cf: 0,
                co: 5,
                ct: 1,
                daf: 750,
                dm: 0,
                dmmt: 0,
                ex: 0,
                fdc: 0,
                imho: 0,
                imu: 1,
                nr: 0,
                plc: 0,
                poc: 0,
                sd: 0,
                sf: 0,
                sk: 1,
                ss: 1,
                st: 1,
                tqa: 0,
                ts: 1,
                tsec: 0,
                up: 0,
                us: 0,
                utm: 0,
                md: 0,
            };
            try {
                if (r.adParameters.cp)
                    for (var b = decodeURIComponent(r.adParameters.cp).split("|"), _ = 0; _ < b.length; _++)
                        if (b[_]) {
                            var P = b[_].split(":");
                            2 == P.length && "" != P[1]
                                ? void 0 !== y[P[0]]
                                    ? (y[P[0]] = P[1].match(/[a-zA-Z]/i) ? P[1] : parseInt(P[1], 10))
                                    : (y[P[0]] = P[1])
                                : (y[P[0]] = !0);
                        }
            } catch (t) {}
            if (
                ((r.customParams = y),
                (r.playerSizeParams = r.adParameters.playerSize || {
                    player_0_260: [0, 260],
                    player_261_320: [260, 320],
                    player_321_380: [320, 380],
                    player_381_400: [380, 400],
                    player_401_480: [400, 480],
                    player_481_720: [480, 720],
                    player_721_960: [720, 960],
                    player_more_961: [960, 0],
                }),
                (r.adSize = { width: t, height: s, viewMode: n }),
                (i = !!r.customParams.dm),
                (r.defaultVolume = 0.5),
                f.log("initAd", arguments),
                E.videoSlot && void 0 !== E.videoSlot.attributes)
            ) {
                _ = 0;
                for (var S, w = E.videoSlot.attributes, T = w.length; _ < T; _++) (S = w[_]), (r.savedAttributes[S.nodeName] = S.nodeValue);
            }
            var V = [h.AdImpression, h.AdVideoStart, h.AdVideoFirstQuartile, h.AdVideoMidpoint, h.AdVideoThirdQuartile, h.AdVideoComplete],
                I = [h.AdVideoStart];
            r.customParams.tqa && I.push(h.AdVideoFirstQuartile, h.AdVideoMidpoint, h.AdVideoThirdQuartile, h.AdVideoComplete);
            var C = {};
            if (r.adParameters.pixel && r.adParameters.pixel.length)
                for (_ = 0; _ < r.adParameters.pixel.length; _++) {
                    var D = r.adParameters.pixel[_];
                    C[D.name] = D.url;
                }
            l.init(r.adParameters.wcm, V, C, I),
                (E.slot && 1 === E.slot.nodeType) || ((E.slot = e.body), f.warn('Invalid parameter "environmentVars.slot"'));
            var R = 0;
            for (var M in E.videoSlot)
                if (E.videoSlot.hasOwnProperty(M)) {
                    var k = "" + E.videoSlot[M];
                    switch (M) {
                        case "currentSrc":
                        case "currentTime":
                        case "duration":
                        case "ended":
                        case "handlers":
                        case "paused":
                        case "playbackRate":
                        case "playsinline":
                        case "src":
                        case "type":
                        case "webkit-playsinline":
                            R++;
                    }
                    -1 !== k.indexOf("goog_") && (r.flags.isGoog = !0);
                }
            if (
                (!E.videoSlot ||
                    (1 === E.videoSlot.nodeType && "VIDEO" === E.videoSlot.nodeName.toUpperCase()) ||
                    r.flags.isGoog ||
                    (R >= 10
                        ? (r.flags.isGoog = !0)
                        : (l.customEvent("error_videoslot_null"), (E.videoSlot = null), f.warn('Invalid parameter "environmentVars.videoSlot"'))),
                d.init(E.slot, E.videoSlot ? E.videoSlot : null),
                (u = new v()),
                (c = new g(d.root)).init(
                    r.adParameters.mrcTracker,
                    function (t) {
                        (r.flags[t] = !0), l.customEvent(t), r.customParams.imho > 0 && l.customEvent(t + "_site_" + r.customParams.imho);
                    }.bind(this)
                ),
                f.injectScripts(d.root, r.adParameters.scripts),
                f.injectIFrames(d.root, r.adParameters.frames),
                r.customParams.poc)
            )
                var O = setInterval(function () {
                    var t = c.getViewAbility(r.viewAbilityPercent, r.viewAbilityHasFocus).state;
                    r.flags.visibleReport != t &&
                        ((r.flags.visibleReport = t),
                        t == g.VIEWABLE ? m.resumeAd() : t == g.NOT_VIEWABLE ? m.pauseAd() : t == g.UNDETERMINED && clearInterval(O));
                }, 500);
            l.customEvent(c.getPosition());
        }),
        (s.prototype.startAd = function () {
            f.log("startAd"), r.customParams.dmmt && l.customEvent("start_ad"), n.play() && (r.state = h.AdStarted);
        }),
        (s.prototype.stopAd = function () {
            f.log("stopAd"), n.stop(), u.stop(), c.stop(), d.destroy() && (r.state = h.AdStopped);
        }),
        (s.prototype.skipAd = function () {
            f.log("try_skipAd"),
                this.getAdSkippableState() &&
                    (f.log("skipAd"),
                    (r.state = h.AdSkipped),
                    n.stop(),
                    u.stop(),
                    c.stop(),
                    d.hide(!0),
                    setTimeout(function () {
                        m.stopAd();
                    }, r.customParams.daf));
        }),
        (s.prototype.resizeAd = function (t, e, i) {
            f.log("resizeAd", arguments);
            var a = r.fullscreen;
            (r.adSize = { width: t, height: e, viewMode: i || "normal" }), r.fullscreen && !a && l.customEvent("isFullscreen"), d.updateSize();
        }),
        (s.prototype.pauseAd = function () {
            r.flags.userEngaged || (f.log("pauseAd"), n.pause(), u.pause(), c.pause());
        }),
        (s.prototype.fakePauseAd = function (t) {
            f.log("fakePauseAd"), (r.flags.userEngaged = !0), n.pause(), (r.remainingTime = -2), (r.duration = -2);
        }),
        (s.prototype.resumeAd = function () {
            r.flags.userEngaged || (f.log("resumeAd"), n.resume(), u.resume(), c.resume(), d.update({ type: "forcedResumeAd" }));
        }),
        (s.prototype.expandAd = function () {
            f.log("expandAd"), a.d(h.create(h.AdLog, o.NOT_ALLOWED_METHOD));
        }),
        (s.prototype.collapseAd = function () {
            f.log("collapseAd"), a.d(h.create(h.AdLog, o.NOT_ALLOWED_METHOD));
        }),
        (s.prototype.setAdVolume = function (t) {
            f.log("setAdVolume", t),
                (t = "string" == typeof t ? parseInt(t, 10) : t) > 1 && (t /= 100),
                t < 0 && (t = 0),
                (r.mute = !t),
                (r.volume = t);
        }),
        (s.prototype.getAdVolume = function () {
            return f.log("getAdVolume"), r.mute ? 0 : r.volume;
        }),
        (s.prototype.getAdDuration = function () {
            return r.flags.userEngaged ? r.duration : r.metaData ? r.metaData.totalTime : -2;
        }),
        (s.prototype.getAdLinear = function () {
            return f.log("getAdLinear"), r.linear;
        }),
        (s.prototype.getAdWidth = function () {
            return f.log("getAdWidth"), r.adSize.width;
        }),
        (s.prototype.getAdHeight = function () {
            return f.log("getAdHeight"), r.adSize.height;
        }),
        (s.prototype.getAdRemainingTime = function () {
            return r.remainingTime;
        }),
        (s.prototype.getAdExpanded = function () {
            return f.log("getAdExpanded"), !0;
        }),
        (s.prototype.getAdSkippableState = function () {
            return f.log("getAdSkippableState"), r.canSkip;
        }),
        (s.prototype.getAdIcons = function () {
            return f.log("getAdIcons"), !1;
        }),
        (s.prototype.getAdCompanions = function () {
            return f.log("getAdCompanions"), "";
        }),
        (s.prototype.subscribe = function (t, e, i) {
            a.subscribe(t, e, i);
        }),
        (s.prototype.unsubscribe = function (t, e) {
            a.unsubscribe(t, e);
        }),
        (t.getVPAIDAd = function () {
            return m || (m = new s()), m;
        });
})(window, document);
